% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filterOne.R
\name{filterOne}
\alias{filterOne}
\title{Filter One Bam File}
\usage{
filterOne(bamfilein, bamfileout, statfile, chromosomes, mustKeepRanges,
  histPlot = FALSE, winPlot = FALSE, xlim, histPlotFile, winPlotFile,
  readLength, win, step, pvalueThreshold = 0.05, minCov = 0, maxCov = 0,
  breaks = 100, threshold = 0.7, errorRate = 0.01)
}
\arguments{
\item{bamfilein}{the input bam file to be filterd. Your bamfile should be sorted and have an index file located at the same path as well.}

\item{bamfileout}{the output filtered bam file}

\item{statfile}{the file to write the summary of the results}

\item{chromosomes}{the list of chromosomes to be filtered}

\item{mustKeepRanges}{a GRanges object defines the ranges such that every read maps to those ranges must be kept.}

\item{histPlot}{if TRUE then a histogram of positive proportion over all window will be generated. It's FALSE by default.}

\item{winPlot}{if TRUE then a plot of sum vs positive proportion over all window will be generated. It's FALSE by default.}

\item{xlim}{the max xlim of the window plot when winPlot is TRUE}

\item{histPlotFile}{the file to write the histogram plot when histPlot is TRUE}

\item{winPlotFile}{the file to write the window plot when winPlot is TRUE}

\item{readLength}{the average length of the reads}

\item{win}{the length of the sliding window}

\item{step}{the step length to sliding the window}

\item{pvalueThreshold}{the threshold for the p-value. 0.05 by default}

\item{minCov}{if a window has the max coverage least than minCov, then it will be rejected regardless the strand proportion. 0 by default}

\item{maxCov}{if a window has the max coverage greater than maxCov, then it will be kept regardless the strand proportion. If 0 then it doesn't have effect on selecting window. 0 by default.}

\item{breaks}{the breaks of histogram when histPlot is TRUE}

\item{threshold}{the threshold upper which we keep the reads. 0.7 by default}

\item{errorRate}{the probability that an RNA read takes the false strand. 0.01 by default}
}
\description{
Filter putative double strand DNA from a strand specific RNA-seq using a window sliding across the genome.
}
\details{
filterOne reads a bam file containing strand specific RNA reads, and filter putative double strand DNA. 
Using a window sliding across the genome, we calculate the positive/negative proportion of reads in that window.
For each window, we use logistic regression to estimate the proportion of reads in the window derived from 
stranded RNA (positive or negative). 

\eqn{\pi}: proportion of reads in the window derived from stranded RNA (positive or negative)

Null hypothesis: \eqn{\pi < {\pi}_{0}} where \eqn{{\pi}_{0}} is the given threshold.

Only windows with p-value <= 0.05 are kept. Considering a positive window that is kept, let P be its number of positive reads, and let M
be its number of negative reads. Since these M negative reads should come from double-strand DNA, then there should be also M postive reads among the
P positive reads come from double-strand DNA. In other words, there are only (P-M) positive reads come from RNA. Hence, each positive read in this window is kept 
with the probability equalling (P-M)/P. Each negative read is kept with the probability equalling the given errorRate which is the rate that
an RNA read of your sample has wrong strand.

Since each alignment can be belonged to several windows, then the probability of keeping an alignment is the maximum probability defined by
all windows that contain it.
}
\examples{
 
bamfilein <- system.file("data","s1.chr1.bam",package = "rnaCleanR")
filterOne(bamfilein,bamfileout="out.bam",statfile = "out.stat",histPlot = TRUE,histPlotFile = "hist.pdf", readLength = 100, threshold = 0.7)
}
\seealso{
getPlot, filterMulti
}

