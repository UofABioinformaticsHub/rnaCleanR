% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{computeWinInfo}
\alias{computeWinInfo}
\title{Compute strand information of sliding window (plot version)}
\usage{
computeWinInfo(covLen, covVal, end, win, step)
}
\arguments{
\item{covLen}{the run length of an Rle object which is the coverage comes from positive reads}

\item{covVal}{the run value of an Rle object which is the coverage comes from positive reads}

\item{end}{the last base on the reference chromosome that the sliding window atteints}

\item{win}{the size of the sliding window}

\item{step}{the step of the sliding window}

\item{covNegLen}{the run length of an Rle object which is the coverage comes from negative reads}

\item{covNegVal}{the run value of an Rle object which is the coverage comes from negative reads}

\item{readLength}{the average length of reads}

\item{minCov}{if a window has the max coverage least than minCov, then it will not be counted}
}
\value{
A data frame which contains the information of all windows: Starting positive, Number of Positive/Negative Reads, the Maximum Coverage.
}
\description{
Compute the positive proportion, sum of reads, max coverage and the group of each window. Windows are grouped based on their maximum coverage: by default definition, groups spead from 1 to 4, which correspond to the max coverage respectively in the range "0-10","10-100","100-1000",">1000"
This method is used in the getPlot function when we only need the information to plot, and do not need to filter the reads afterward.
}
\examples{
bamfilein <- system.file("data","s1.chr1.bam",package = "rnaCleanR")
alignment <- GenomicAlignments::readGAlignments(bamfilein)
alignmentInChr1 <- alignment[seqnames(alignment)=="1"]
covPos <- alignmentInChr1[strand(alignment)=="+"] \%>\% GenomicAlignments::coverage()
covNeg <- alignmentInChr1[strand(alignment)=="-"] \%>\% GenomicAlignments::coverage()
len <- length(covChr)
readLength <- 100
win <- 1000
step <- 100
minCov <- 0
windows <- rnaCleanR::computeWinInfo(runLength(covPos),runValue(covPos),runLength(covNeg),runValue(covNeg),readLength,len,win,step,minCov)


}

